/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package Vista.Prev;

import CRUD.CRUDZona;
import Vista.FrmZona_Plantas;
import Vista.Insert.FrmLista_Empleados_ZonaInsert;
import Vista.Insert.FrmZona_PlantasInsert;
import entitys.Lista_Empleados_Zona;
import entitys.Zona;
import entitys.Zona_Plantas;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author obeth
 */
public class FrmZona_PlantasPrev extends javax.swing.JFrame {
        
    private CRUDZona qZona;
    List<Zona> zonlist = new ArrayList();
    
    /** Creates new form FrmZona_PlantasPrev */
    public FrmZona_PlantasPrev() {
        initComponents();
        this.qZona = new CRUDZona();
        setLocationRelativeTo(null);
        
        llenarZona();
        
    }
    
    private void llenarZona(){
        zonlist = qZona.getZona("", "");
        for(int i=0; i<zonlist.size();i++){
            Zona z = zonlist.get(i);
            cmbZona.addItem(z.getZon_nombre());
        }
    }
    
    public void limpiar(){
        this.txtHumedad.setText("");
        this.txtTemperatura.setText("");
        this.cmbZona.setSelectedItem(0);
        this.cmbHoraRegistro.setSelectedItem(0);
        this.spnMinRegistro.setValue(0);
        this.dateRegistro.setDate(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbZona = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtTemperatura = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtHumedad = new javax.swing.JTextField();
        spnMinRegistro = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        dateRegistro = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        cmbHoraRegistro = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Crear Zona de Plantas");

        jLabel2.setText("Seleccionar la zona donde se ubicara");

        jLabel3.setText("Temperatura:");

        jLabel4.setText("Humedad:");

        spnMinRegistro.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));

        jLabel5.setText("Fecha y Hora de registro (Cada cuatro horas)");

        jLabel14.setText("Hora:");

        cmbHoraRegistro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));

        jLabel16.setText("Min:");

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jLabel6.setText("(%HR)");

        jLabel7.setText("(Â°C)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(dateRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbHoraRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnMinRegistro))
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(52, 52, 52)
                        .addComponent(txtHumedad, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(32, 32, 32)
                        .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7))
                    .addComponent(cmbZona, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnRegresar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbZona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtHumedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbHoraRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14))
                    .addComponent(dateRegistro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(spnMinRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresar)
                    .addComponent(btnAgregar))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        
        String zona = cmbZona.getSelectedItem().toString();
        String zonpla_temperaturatxt = txtTemperatura.getText();
        String zonpla_humedadtxt = txtHumedad.getText();

        int zonpla_humedad=0;
        float zonpla_temperatura=0;
        // Fechas y horas
        String horaRegistroTxt = cmbHoraRegistro.getSelectedItem() != null ? cmbHoraRegistro.getSelectedItem().toString() : "";

        Date fechaRegistro = dateRegistro.getDate();

        int minRegistro = (Integer) spnMinRegistro.getValue();
        int horaRegistro = Integer.parseInt(horaRegistroTxt);

        StringBuilder mensajeError = new StringBuilder();

        if (zonpla_humedadtxt.isEmpty()) {
            mensajeError.append("El campo de Humedad no puede estar vacÃ­o.\n");
        } else {
            try {
                zonpla_humedad = Integer.parseInt(zonpla_humedadtxt);

                if (zonpla_humedad <= 0) {
                    mensajeError.append("La humedad no puede ser negativa o nula.\n");
                }
            } catch (NumberFormatException e) {
                mensajeError.append("El valor de humedad debe ser un nÃºmero entero vÃ¡lido.\n");
            }
        }
        
        if (zonpla_temperaturatxt.isEmpty()) {
            mensajeError.append("El campo de Temperatura no puede estar vacÃ­o.\n");
        } else {
            try {
                zonpla_temperatura = Float.parseFloat(zonpla_temperaturatxt);

                if (zonpla_temperatura <= 0.0) {
                    mensajeError.append("La temperatura no puede ser negativa o nula.\n");
                }
            } catch (NumberFormatException e) {
                mensajeError.append("El valor de temperatura debe ser un nÃºmero entero o decimal vÃ¡lido.\n");
            }
        }
        
        // Validar fechas
        if (fechaRegistro == null) {
            mensajeError.append("Debe ingresar una fecha de Registro.\n");
        }

        // Validar horas
        if (cmbHoraRegistro.getSelectedIndex() == -1) {
            mensajeError.append("Debe seleccionar una hora vÃ¡lida para el Registro.\n");
        }

        // Validar minutos
        if (minRegistro < 0 || minRegistro > 59) {
            mensajeError.append("Los minutos deben estar en un rango de 0 a 59.\n");
        }

        if (mensajeError.length() > 0) {
            // Mostrar errores
            JOptionPane.showMessageDialog(null, mensajeError.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Combinar fecha y hora en Calendar
            Calendar calInicio = Calendar.getInstance();
            calInicio.setTime(fechaRegistro);
            calInicio.set(Calendar.HOUR_OF_DAY, horaRegistro);
            calInicio.set(Calendar.MINUTE, minRegistro);
            calInicio.set(Calendar.SECOND, 0);
            Date IniRechaRegisrto = calInicio.getTime();  // Fecha y hora de inicio combinada


            // Crear nuevo objeto Lista_Empleados_Zona
            Zona_Plantas nuevaLista = new Zona_Plantas(0, zonpla_temperatura, 
                    zonpla_humedad, IniRechaRegisrto);
                    
            FrmZona_PlantasInsert frminsert = new FrmZona_PlantasInsert(nuevaLista,
                    this, zona);
            
            frminsert.setVisible(true);
            this.setVisible(false);            
        }    
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        FrmZona_Plantas frmZ = new FrmZona_Plantas();
        frmZ.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmZona_PlantasPrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmZona_PlantasPrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmZona_PlantasPrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmZona_PlantasPrev.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmZona_PlantasPrev().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox<String> cmbHoraRegistro;
    private javax.swing.JComboBox<String> cmbZona;
    private com.toedter.calendar.JDateChooser dateRegistro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSpinner spnMinRegistro;
    private javax.swing.JTextField txtHumedad;
    private javax.swing.JTextField txtTemperatura;
    // End of variables declaration//GEN-END:variables


}
